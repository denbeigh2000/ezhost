from ..constants import IS_WINDOWS_PLATFORM as IS_WINDOWS_PLATFORM
from .fnmatch import fnmatch as fnmatch
from typing import Any

def tar(
    path,
    exclude: Any | None = ...,
    dockerfile: Any | None = ...,
    fileobj: Any | None = ...,
    gzip: bool = ...,
): ...
def exclude_paths(root, patterns, dockerfile: Any | None = ...): ...
def build_file_list(root): ...
def create_archive(
    root,
    files: Any | None = ...,
    fileobj: Any | None = ...,
    gzip: bool = ...,
    extra_files: Any | None = ...,
): ...
def mkbuildcontext(dockerfile): ...
def split_path(p): ...
def normalize_slashes(p): ...
def walk(root, patterns, default: bool = ...): ...

class PatternMatcher:
    patterns: Any
    def __init__(self, patterns): ...
    def matches(self, filepath): ...
    def walk(self, root): ...

class Pattern:
    exclusion: bool
    dirs: Any
    cleaned_pattern: Any
    def __init__(self, pattern_str) -> None: ...
    @classmethod
    def normalize(cls, p): ...
    def match(self, filepath): ...
